{"version":3,"sources":["components/Button/ButtonLink.js","components/Button/Button.js","components/Form/Checkbox.js","components/Form/TextInput.js","components/TodoList/TodoItem.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["ButtonLink","_ref","href","id","name","text","activeFilter","setFilter","react_default","a","createElement","className","cn","selected","onClick","Button","handleClick","type","defaultProps","Checkbox","checked","handleChange","onChange","placeholder","handleBlur","TextInput","value","autoFocus","onBlur","TodoItem","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","inputTitle","props","title","changeTitleTodo","target","setState","onEdit","setEditingId","document","addEventListener","handleKeyup","e","_this$props","code","removeEventListener","sendChanges","preventDefault","_this$props2","setTodoValue","trim","createClass","key","_this2","_this$props3","completed","toggleTodoStatus","editingTodoId","deleteTodo","editing","onSubmit","Checkbox_Checkbox","htmlFor","onDoubleClick","Button_Button","TextInput_TextInput","Component","TodoList","todoList","selectedAll","toggleTodoAllStatus","map","todo","index","TodoItem_TodoItem","assign","Header","handleInput","reset","sendTodo","addNewTodo","filterButtons","Footer","clearComplited","hidden","filter","_ref2","ButtonLink_ButtonLink","todosFromServer","JSON","parse","localStorage","getItem","FILTER_TYPES","all","active","App","toConsumableArray","Date","parseInt","objectSpread2","checkSelectedAll","activeTodos","isSelectedAll","field","defineProperty","getFilteredTodos","_this$state","setItem","stringify","_this$state2","filteredTodoList","Header_Header","TodoList_TodoList_TodoList","Footer_Footer","PureComponent","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.32e953e0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const ButtonLink = ({\n  href,\n  id,\n  name,\n  text,\n  activeFilter,\n  setFilter,\n}) => (\n  <a\n    id={id}\n    name={name}\n    href={href}\n    className={cn({ selected: id === activeFilter })}\n    onClick={setFilter}\n  >\n    {text}\n  </a>\n\n);\n\nButtonLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({\n  id,\n  name,\n  className,\n  text,\n  handleClick,\n}) => (\n  <button\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={handleClick}\n  >\n    {text}\n  </button>\n\n);\n\nButton.defaultProps = {\n  text: '',\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  handleClick: PropTypes.func.isRequired,\n\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Checkbox = ({\r\n  id,\r\n  name,\r\n  className,\r\n  checked,\r\n  handleChange,\r\n}) => (\r\n  <input\r\n    id={id}\r\n    name={name}\r\n    type=\"checkbox\"\r\n    checked={checked}\r\n    className={className}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n\r\nCheckbox.defaultProps = {\r\n  placeholder: '',\r\n  checked: false,\r\n  handleBlur: () => {},\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  checked: PropTypes.bool,\r\n  handleChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TextInput = ({\r\n  value,\r\n  id,\r\n  name,\r\n  className,\r\n  placeholder,\r\n  autoFocus,\r\n  handleChange,\r\n  handleBlur,\r\n}) => (\r\n  <input\r\n    value={value}\r\n    id={id}\r\n    name={name}\r\n    type=\"text\"\r\n    className={className}\r\n    placeholder={placeholder}\r\n    autoFocus={autoFocus}\r\n    onChange={handleChange}\r\n    onBlur={handleBlur}\r\n  />\r\n);\r\n\r\nTextInput.defaultProps = {\r\n  placeholder: '',\r\n  autoFocus: false,\r\n  handleBlur: () => {},\r\n};\r\n\r\nTextInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Button } from '../Button';\nimport { Checkbox, TextInput } from '../Form';\n\nexport class TodoItem extends Component {\n  state = {\n    inputTitle: this.props.title,\n  }\n\n  changeTitleTodo = ({ target }) => {\n    this.setState({ inputTitle: target.value });\n  }\n\n  onEdit = (id) => {\n    const { setEditingId } = this.props;\n\n    document.addEventListener('keyup', this.handleKeyup)\n\n    setEditingId(id)\n  }\n\n  handleKeyup =(e) => {\n    const { title, setEditingId } = this.props;\n\n    if (e.code === 'Escape') {\n      this.setState({inputTitle: title })\n      setEditingId();\n\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  sendChanges = (e) => {\n    e.preventDefault();\n\n    const { id, setTodoValue } = this.props;\n    const { inputTitle } = this.state;\n\n    if (inputTitle.trim().length > 0) {\n      setTodoValue(id, 'title', inputTitle.trim());\n    }\n  }\n\n  render() {\n    const {\n      title,\n      completed,\n      id,\n      toggleTodoStatus,\n      editingTodoId,\n      deleteTodo,\n    } = this.props;\n\n    const { inputTitle } = this.state;\n\n    return (\n      <li className={cn({\n        completed: completed && editingTodoId !== id,\n        editing: editingTodoId === id,\n      })}\n      >\n        <form onSubmit={this.sendChanges}>\n          <div className=\"view\">\n            <Checkbox \n              id={`${id}`}\n              name={`${id}`}\n              className=\"toggle\"\n              checked={completed}\n              handleChange={toggleTodoStatus}\n            />\n\n            <label\n              htmlFor={`edit-${id}`}\n              onDoubleClick={() => this.onEdit(id)}\n            >\n              {title}\n            </label>\n\n            <Button\n              id={`destroy-${id}`}\n              name={`destroy-${id}`}\n              className=\"destroy\"\n              handleClick={() => deleteTodo(id)}\n            />\n          </div>\n          {editingTodoId === id && (\n            <TextInput \n              className=\"edit\"\n              id={`edit-${id}`}\n              name={`edit-${id}`}\n              value={inputTitle}\n              autoFocus={true}\n              handleChange={this.changeTitleTodo}\n              handleBlur={this.sendChanges}\n            />\n          )}\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.defaultProps = {};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem';\nimport { Checkbox } from '../Form/Checkbox';\n\nexport const TodoList = ({\n  todoList,\n  editingTodoId,\n  selectedAll,\n  toggleTodoStatus,\n  toggleTodoAllStatus,\n  deleteTodo,\n  setEditingId,\n  setTodoValue,\n}) => (\n  <section className=\"main\">\n    <Checkbox \n      id=\"toggle-all\"\n      name=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectedAll}\n      handleChange={toggleTodoAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          editingTodoId={editingTodoId}\n          toggleTodoStatus={toggleTodoStatus}\n          deleteTodo={deleteTodo}\n          setEditingId={setEditingId}\n          setTodoValue={setTodoValue}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  selectedAll: PropTypes.bool.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  toggleTodoAllStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput } from '../Form';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  }\n\n\n  handleInput =({ target }) => {\n    document.addEventListener('keyup', this.handleKeyup)\n    this.setState({ title: target.value });\n  }\n\n  handleKeyup =(e) => {\n    if (e.code === 'Escape') {\n      this.setState({ title: '' });\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  reset = () => {\n    this.setState({ title: '' });\n  }\n\n  sendTodo = (e) => {\n    e.preventDefault();\n\n    const { addNewTodo } = this.props;\n    const { title } = this.state;\n\n    if (title.trim().length > 0) {\n      addNewTodo(title.trim());\n      this.reset();\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.sendTodo}>\n          <TextInput \n            className=\"new-todo\"\n            id=\"new-todo\"\n            name=\"new-todo\"\n            value={title}\n            handleChange={this.handleInput}\n            handleBlur={this.sendTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { ButtonLink, Button } from '../Button';\n\nconst filterButtons = [\n  {\n    id: 'all',\n    href: '#/',\n    text: 'All',\n  },\n  {\n    id: 'active',\n    href: '#/active',\n    text: 'Active',\n  },\n  {\n    id: 'completed',\n    href: '#/completed',\n    text: 'Completed',\n  },\n];\n\nexport const Footer = ({\n  todoList,\n  activeFilter,\n  setFilter,\n  clearComplited,\n}) => (\n  <footer className={cn('footer', { hidden: todoList.length === 0 })}>\n    <span className=\"todo-count\">\n      {`${todoList.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      {filterButtons.map(({ id, href, text }) => (\n        <li key={id}>\n          <ButtonLink\n            href={href}\n            id={id}\n            text={text}\n            name={id}\n            activeFilter={activeFilter}\n            setFilter={setFilter}\n          />\n        </li>\n      ))}\n    </ul>\n\n    <Button\n      id=\"clear-completed\"\n      name=\"clear-completed\"\n      className=\"clear-completed\"\n      text=\"Clear completed\"\n      handleClick={clearComplited}\n    />\n  </footer>\n);\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearComplited: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst todosFromServer = JSON.parse(localStorage.getItem('todos')) || [];\nconst FILTER_TYPES = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n}\n\nclass App extends PureComponent {\n  state = {\n    todoList: [...todosFromServer],\n    editingTodoId: 0,\n    activeFilter: FILTER_TYPES.all,\n    selectedAll: false,\n  }\n\n  componentDidMount() {\n    this.checkSelectedAll();\n  }\n\n  componentDidUpdate() {\n    const { todoList } = this.state;\n\n    localStorage.setItem('todos', JSON.stringify([...todoList]));\n    this.checkSelectedAll();\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n      selectedAll: false,\n    }));\n  }\n\n  toggleTodoStatus = ({ target }) => {\n    const id = parseInt(target.id);\n\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n      selectedAll: false,\n    }), this.checkSelectedAll());\n\n    this.checkSelectedAll();\n  };\n\n  toggleTodoAllStatus = ({ target }) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => ({\n        ...todo,\n        completed: !state.selectedAll,\n      })),\n      selectedAll: !state.selectedAll,\n    }));\n  }\n\n  checkSelectedAll = () => {\n    const { todoList } = this.state;\n    const activeTodos = todoList.filter(todo => todo.completed).length\n    const isSelectedAll = (todoList.length !== 0) ? activeTodos === todoList.length : false;\n\n    this.setState({ selectedAll: isSelectedAll });\n  }\n\n  setEditingId =(id) => {\n    this.setState(state => ({\n      ...state,\n      editingTodoId: id || 0,\n    }));\n  }\n\n  setTodoValue = (id, field, value) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            [field]: value,\n          }\n          : todo\n      )),\n      editingTodoId: 0,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  setFilter = (e) => {\n    e.preventDefault();\n\n    const { name } = e.target;\n\n    this.setState({ activeFilter: name });\n  }\n\n  getFilteredTodos = () => {\n    const { todoList, activeFilter } = this.state;\n\n    if (activeFilter === FILTER_TYPES.completed) {\n      return todoList.filter(todo => todo.completed);\n    }\n\n    if (activeFilter === FILTER_TYPES.active) {\n      return todoList.filter(todo => !todo.completed);\n    }\n\n    return todoList;\n  }\n\n  clearComplited = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todoList, editingTodoId, activeFilter, selectedAll } = this.state;\n    const filteredTodoList = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header addNewTodo={this.addNewTodo} />\n\n        <TodoList\n          todoList={filteredTodoList}\n          editingTodoId={editingTodoId}\n          selectedAll={selectedAll}\n          toggleTodoStatus={this.toggleTodoStatus}\n          toggleTodoAllStatus={this.toggleTodoAllStatus}\n          deleteTodo={this.deleteTodo}\n          setEditingId={this.setEditingId}\n          setTodoValue={this.setTodoValue}\n        />\n\n        <Footer\n          todoList={todoList}\n          activeFilter={activeFilter}\n          setFilter={this.setFilter}\n          clearComplited={this.clearComplited}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}