{"version":3,"sources":["components/Button/ButtonLink.js","components/Button/Button.js","components/TodoList/TodoItem.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["ButtonLink","_ref","href","id","text","activeFilter","setFilter","react_default","a","createElement","className","cn","selected","onClick","Button","handlerClick","type","defaultProps","TodoItem","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","inputTitle","props","title","handleChangeTitleTodo","target","setState","value","onEdit","setEditingId","document","addEventListener","cancelChanges","e","_this$props","code","removeEventListener","sendChanges","preventDefault","_this$props2","setTodoValue","pattern","test","trim","createClass","key","_this2","_this$props3","completed","toggleTodoStatus","editingTodoId","deleteTodo","editing","onSubmit","checked","onChange","htmlFor","onDoubleClick","Button_Button","onBlur","Component","TodoList","todoList","selectedAll","toggleTodoAllStatus","map","todo","index","TodoItem_TodoItem","assign","Header","handleInput","reset","sendTodo","addNewTodo","placeholder","filterButtons","Footer","clearComplited","hidden","filter","_ref2","ButtonLink_ButtonLink","todosFromServer","JSON","parse","localStorage","getItem","App","toConsumableArray","Date","objectSpread2","checkSelectedAll","activeTodos","field","defineProperty","getFilteredTodos","_this$state","setItem","stringify","_this$state2","filteredTodoList","Header_Header","TodoList_TodoList_TodoList","Footer_Footer","PureComponent","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.ab730708.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const ButtonLink = ({\n  href,\n  id,\n  text,\n  activeFilter,\n  setFilter,\n}) => (\n  <a\n    id={id}\n    href={href}\n    className={cn({ selected: id === activeFilter })}\n    onClick={setFilter}\n  >\n    {text}\n  </a>\n\n);\n\nButtonLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({\n  id,\n  className,\n  text,\n  handlerClick,\n}) => (\n  <button\n    id={id}\n    type=\"button\"\n    className={className}\n    onClick={handlerClick}\n  >\n    {text}\n  </button>\n\n);\n\nButton.defaultProps = {\n  text: '',\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  handlerClick: PropTypes.func.isRequired,\n\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Button } from '../Button';\n\nexport class TodoItem extends Component {\n  state = {\n    inputTitle: this.props.title,\n  }\n\n  handleChangeTitleTodo = ({ target }) => {\n    this.setState({ inputTitle: target.value });\n  }\n\n  onEdit = (id) => {\n    const { setEditingId } = this.props;\n\n    document.addEventListener('keyup', this.cancelChanges)\n\n    setEditingId(id)\n  }\n\n  cancelChanges =(e) => {\n    const { title, setEditingId } = this.props;\n\n    if (e.code !== 'Escape') {\n      return;\n    }\n\n    this.setState({inputTitle: title })\n    setEditingId();\n\n    document.removeEventListener('keyup', this.cancelChanges);\n  }\n\n  sendChanges = (e) => {\n    e.preventDefault();\n\n    const { id, setTodoValue, pattern } = this.props;\n    const { inputTitle } = this.state;\n\n    if (pattern.test(inputTitle)) {\n      setTodoValue(id, 'title', inputTitle.trim());\n    }\n  }\n\n  render() {\n    const {\n      title,\n      completed,\n      id,\n      toggleTodoStatus,\n      editingTodoId,\n      deleteTodo,\n    } = this.props;\n\n    const { inputTitle } = this.state;\n\n    return (\n      <li className={cn({\n        completed: completed && editingTodoId !== id,\n        editing: editingTodoId === id,\n      })}\n      >\n        <form onSubmit={this.sendChanges}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              checked={completed}\n              onChange={() => toggleTodoStatus(id)}\n            />\n\n            <label\n              htmlFor={`edit-${id}`}\n              onDoubleClick={() => this.onEdit(id)}\n            >\n              {title}\n            </label>\n\n            <Button\n              id={`destroy-${id}`}\n              className=\"destroy\"\n              handlerClick={() => deleteTodo(id)}\n            />\n          </div>\n\n          <input\n            type=\"text\"\n            className=\"edit\"\n            id={`edit-${id}`}\n            value={inputTitle}\n            onChange={this.handleChangeTitleTodo}\n            onBlur={this.sendChanges}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.defaultProps = {};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todoList,\n  editingTodoId,\n  selectedAll,\n  toggleTodoStatus,\n  toggleTodoAllStatus,\n  deleteTodo,\n  setEditingId,\n  setTodoValue,\n  pattern,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectedAll}\n      onChange={toggleTodoAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          editingTodoId={editingTodoId}\n          toggleTodoStatus={toggleTodoStatus}\n          deleteTodo={deleteTodo}\n          setEditingId={setEditingId}\n          setTodoValue={setTodoValue}\n          pattern={pattern}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  selectedAll: PropTypes.bool.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  toggleTodoAllStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  }\n\n  handleInput =({ target }) => {\n    this.setState({ title: target.value });\n  }\n\n  reset = () => {\n    this.setState({ title: '' });\n  }\n\n  sendTodo = (e) => {\n    e.preventDefault();\n\n    const { addNewTodo, pattern } = this.props;\n    const { title } = this.state;\n\n    if (pattern.test(title)) {\n      addNewTodo(title);\n      this.reset();\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.sendTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.sendTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { ButtonLink, Button } from '../Button';\n\nconst filterButtons = [\n  {\n    id: 'all',\n    href: '#/',\n    text: 'All',\n  },\n  {\n    id: 'active',\n    href: '#/active',\n    text: 'Active',\n  },\n  {\n    id: 'completed',\n    href: '#/completed',\n    text: 'Completed',\n  },\n];\n\nexport const Footer = ({\n  todoList,\n  activeFilter,\n  setFilter,\n  clearComplited,\n}) => (\n  <footer className={cn('footer', { hidden: todoList.length === 0 })}>\n    <span className=\"todo-count\">\n      {`${todoList.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      {filterButtons.map(({ id, href, text }) => (\n        <li key={id}>\n          <ButtonLink\n            href={href}\n            id={id}\n            text={text}\n            activeFilter={activeFilter}\n            setFilter={setFilter}\n          />\n        </li>\n      ))}\n    </ul>\n\n    <Button\n      id=\"clear-completed\"\n      className=\"clear-completed\"\n      text=\"Clear completed\"\n      handlerClick={clearComplited}\n    />\n  </footer>\n);\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearComplited: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst todosFromServer = JSON.parse(localStorage.getItem('todos')) || [];\nconst pattern = /^[A-Za-z0-9\\s]+$/giu;\n\nclass App extends PureComponent {\n  state = {\n    todoList: [...todosFromServer],\n    editingTodoId: 0,\n    activeFilter: 'all',\n    selectedAll: false,\n  }\n\n  componentDidMount() {\n    this.checkSelectedAll();\n  }\n\n  componentDidUpdate() {\n    const { todoList } = this.state;\n\n    localStorage.setItem('todos', JSON.stringify([...todoList]));\n    this.checkSelectedAll();\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n      selectedAll: false,\n    }));\n  }\n\n  toggleTodoStatus = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n      selectedAll: false,\n    }), this.checkSelectedAll());\n\n    this.checkSelectedAll();\n  };\n\n  toggleTodoAllStatus = ({ target }) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => ({\n        ...todo,\n        completed: !state.selectedAll,\n      })),\n      selectedAll: !state.selectedAll,\n    }));\n  }\n\n  checkSelectedAll = () => {\n    const { todoList } = this.state;\n    const activeTodos = todoList.filter(todo => todo.completed).length\n\n    this.setState(state => ({ selectedAll: activeTodos === todoList.length }))\n  }\n\n  setEditingId =(id) => {\n    this.setState(state => ({\n      ...state,\n      editingTodoId: id || 0,\n    }));\n  }\n\n  setTodoValue = (id, field, value) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            [field]: value,\n          }\n          : todo\n      )),\n      editingTodoId: 0,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  setFilter = (e) => {\n    e.preventDefault();\n\n    const { id } = e.target;\n\n    this.setState({ activeFilter: id });\n  }\n\n  getFilteredTodos = () => {\n    const { todoList, activeFilter: filter } = this.state;\n\n    if (filter === 'completed') {\n      return todoList.filter(todo => todo.completed);\n    }\n\n    if (filter === 'active') {\n      return todoList.filter(todo => !todo.completed);\n    }\n\n    return todoList;\n  }\n\n  clearComplited = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todoList, editingTodoId, activeFilter, selectedAll } = this.state;\n    const filteredTodoList = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header addNewTodo={this.addNewTodo} pattern={pattern} />\n\n        <TodoList\n          todoList={filteredTodoList}\n          editingTodoId={editingTodoId}\n          selectedAll={selectedAll}\n          toggleTodoStatus={this.toggleTodoStatus}\n          toggleTodoAllStatus={this.toggleTodoAllStatus}\n          deleteTodo={this.deleteTodo}\n          setEditingId={this.setEditingId}\n          setTodoValue={this.setTodoValue}\n          pattern={pattern}\n        />\n\n        <Footer\n          todoList={todoList}\n          activeFilter={activeFilter}\n          setFilter={this.setFilter}\n          clearComplited={this.clearComplited}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}