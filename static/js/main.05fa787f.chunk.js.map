{"version":3,"sources":["components/Button/ButtonLink.js","components/Button/Button.js","components/TodoList/TodoItem.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["ButtonLink","_ref","href","id","text","activeFilter","setFilter","react_default","a","createElement","className","cn","selected","onClick","Button","handlerClick","type","defaultProps","TodoItem","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","inputTitle","props","title","handleChangeTitleTodo","target","setState","value","sendChanges","e","preventDefault","_this$props","setTodoValue","trim","createClass","key","_this$props2","completed","toggleTodoStatus","editingTodoId","deleteTodo","setEditingId","editing","onSubmit","checked","onChange","htmlFor","onDoubleClick","Button_Button","onBlur","Component","TodoList","todoList","selectedAll","toggleTodoAllStatus","map","todo","index","TodoItem_TodoItem","assign","Header","handleInput","reset","sendTodo","addNewTodo","placeholder","filterButtons","Footer","clearComplited","hidden","filter","_ref2","ButtonLink_ButtonLink","todosFromServer","JSON","parse","localStorage","getItem","App","toConsumableArray","Date","objectSpread2","field","defineProperty","getFilteredTodos","_this$state","setItem","stringify","_this$state2","filteredTodoList","Header_Header","TodoList_TodoList_TodoList","Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05fa787f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const ButtonLink = ({\n  href,\n  id,\n  text,\n  activeFilter,\n  setFilter,\n}) => (\n  <a\n    id={id}\n    href={href}\n    className={cn({ selected: id === activeFilter })}\n    onClick={setFilter}\n  >\n    {text}\n  </a>\n\n);\n\nButtonLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({\n  id,\n  className,\n  text,\n  handlerClick,\n}) => (\n  <button\n    id={id}\n    type=\"button\"\n    className={className}\n    onClick={handlerClick}\n  >\n    {text}\n  </button>\n\n);\n\nButton.defaultProps = {\n  text: '',\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  handlerClick: PropTypes.func.isRequired,\n\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Button } from '../Button';\n\nexport class TodoItem extends Component {\n  state = {\n    inputTitle: this.props.title,\n  }\n\n  handleChangeTitleTodo = ({ target }) => {\n    this.setState({ inputTitle: target.value });\n  }\n\n  sendChanges = (e) => {\n    e.preventDefault();\n\n    const { id, setTodoValue } = this.props;\n    const { inputTitle } = this.state;\n\n    if (inputTitle.trim().length === 0) {\n      return;\n    }\n\n    setTodoValue(id, 'title', inputTitle.trim());\n  }\n\n  render() {\n    const {\n      title,\n      completed,\n      id,\n      toggleTodoStatus,\n      editingTodoId,\n      deleteTodo,\n      setEditingId,\n    } = this.props;\n\n    const { inputTitle } = this.state;\n\n    return (\n      <li className={cn({\n        completed: completed && editingTodoId !== id,\n        editing: editingTodoId === id,\n      })}\n      >\n        <form onSubmit={this.sendChanges}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              checked={completed}\n              onChange={() => toggleTodoStatus(id)}\n            />\n\n            <label\n              htmlFor={`edit-${id}`}\n              onDoubleClick={() => setEditingId(id)}\n            >\n              {title}\n            </label>\n\n            <Button\n              id={`destroy-${id}`}\n              className=\"destroy\"\n              handlerClick={() => deleteTodo(id)}\n            />\n          </div>\n\n          <input\n            type=\"text\"\n            className=\"edit\"\n            id={`edit-${id}`}\n            value={inputTitle}\n            onChange={this.handleChangeTitleTodo}\n            onBlur={this.sendChanges}\n          />\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.defaultProps = {};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todoList,\n  editingTodoId,\n  selectedAll,\n  toggleTodoStatus,\n  toggleTodoAllStatus,\n  deleteTodo,\n  setEditingId,\n  setTodoValue,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectedAll}\n      onChange={toggleTodoAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          editingTodoId={editingTodoId}\n          toggleTodoStatus={toggleTodoStatus}\n          deleteTodo={deleteTodo}\n          setEditingId={setEditingId}\n          setTodoValue={setTodoValue}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  selectedAll: PropTypes.bool.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  toggleTodoAllStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  }\n\n  handleInput =({ target }) => {\n    this.setState({ title: target.value });\n  }\n\n  reset = () => {\n    this.setState({ title: '' });\n  }\n\n  sendTodo = (e) => {\n    e.preventDefault();\n\n    const { addNewTodo } = this.props;\n    const { title } = this.state;\n\n    if (title === '') {\n      return;\n    }\n\n    addNewTodo(title);\n    this.reset();\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.sendTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.sendTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { ButtonLink, Button } from '../Button';\n\nconst filterButtons = [\n  {\n    id: 'all',\n    href: '#/',\n    text: 'All',\n  },\n  {\n    id: 'active',\n    href: '#/active',\n    text: 'Active',\n  },\n  {\n    id: 'completed',\n    href: '#/completed',\n    text: 'Completed',\n  },\n];\n\nexport const Footer = ({\n  todoList,\n  activeFilter,\n  setFilter,\n  clearComplited,\n}) => (\n  <footer className={cn('footer', { hidden: todoList.length === 0 })}>\n    <span className=\"todo-count\">\n      {`${todoList.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      {filterButtons.map(({ id, href, text }) => (\n        <li key={id}>\n          <ButtonLink\n            href={href}\n            id={id}\n            text={text}\n            activeFilter={activeFilter}\n            setFilter={setFilter}\n          />\n        </li>\n      ))}\n    </ul>\n\n    <Button\n      id=\"clear-completed\"\n      className=\"clear-completed\"\n      text=\"Clear completed\"\n      handlerClick={clearComplited}\n    />\n  </footer>\n);\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearComplited: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst todosFromServer = JSON.parse(localStorage.getItem('todos')) || [];\n\nclass App extends Component {\n  state = {\n    todoList: [...todosFromServer],\n    editingTodoId: 0,\n    activeFilter: 'all',\n    selectedAll: false,\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify([...this.state.todoList]));\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n      selectedAll: false,\n    }));\n  }\n\n  toggleTodoStatus = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n      selectedAll: false,\n    }));\n  };\n\n  toggleTodoAllStatus = ({ target }) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => ({\n        ...todo,\n        completed: !state.selectedAll,\n      })),\n      selectedAll: !state.selectedAll,\n    }));\n  }\n\n  setEditingId =(id) => {\n    this.setState(state => ({\n      ...state,\n      editingTodoId: id || 0,\n    }));\n  }\n\n  setTodoValue = (id, field, value) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            [field]: value,\n          }\n          : todo\n      )),\n      editingTodoId: 0,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  setFilter = (e) => {\n    e.preventDefault();\n\n    const { id } = e.target;\n\n    this.setState({ activeFilter: id });\n  }\n\n  getFilteredTodos = () => {\n    const { todoList, activeFilter: filter } = this.state;\n\n    if (filter === 'completed') {\n      return todoList.filter(todo => todo.completed);\n    }\n\n    if (filter === 'active') {\n      return todoList.filter(todo => !todo.completed);\n    }\n\n    return todoList;\n  }\n\n  clearComplited = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todoList, editingTodoId, activeFilter, selectedAll } = this.state;\n    const filteredTodoList = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header addNewTodo={this.addNewTodo} />\n\n        <TodoList\n          todoList={filteredTodoList}\n          editingTodoId={editingTodoId}\n          selectedAll={selectedAll}\n          toggleTodoStatus={this.toggleTodoStatus}\n          toggleTodoAllStatus={this.toggleTodoAllStatus}\n          deleteTodo={this.deleteTodo}\n          setEditingId={this.setEditingId}\n          setTodoValue={this.setTodoValue}\n        />\n\n        <Footer\n          todoList={todoList}\n          activeFilter={activeFilter}\n          setFilter={this.setFilter}\n          clearComplited={this.clearComplited}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}