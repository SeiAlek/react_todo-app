{"version":3,"sources":["components/Button/ButtonLink.js","components/Button/Button.js","components/TodoList/TodoItem.js","components/TodoList/TodoList.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["ButtonLink","_ref","href","id","name","text","activeFilter","setFilter","react_default","a","createElement","className","cn","selected","onClick","Button","handlerClick","type","defaultProps","TodoItem","_Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","inputTitle","props","title","handleChangeTitleTodo","target","setState","value","onEdit","setEditingId","document","addEventListener","handleKeyup","e","_this$props","code","removeEventListener","sendChanges","preventDefault","_this$props2","setTodoValue","trim","createClass","key","_this2","_this$props3","completed","toggleTodoStatus","editingTodoId","deleteTodo","editing","onSubmit","checked","onChange","htmlFor","onDoubleClick","Button_Button","autoFocus","onBlur","Component","TodoList","todoList","selectedAll","toggleTodoAllStatus","map","todo","index","TodoItem_TodoItem","assign","Header","handleInput","reset","sendTodo","addNewTodo","placeholder","filterButtons","Footer","clearComplited","hidden","filter","_ref2","ButtonLink_ButtonLink","todosFromServer","JSON","parse","localStorage","getItem","FILTER_TYPES","all","active","App","toConsumableArray","Date","objectSpread2","checkSelectedAll","activeTodos","isSelectedAll","console","log","field","defineProperty","getFilteredTodos","_this$state","setItem","stringify","_this$state2","filteredTodoList","Header_Header","TodoList_TodoList_TodoList","Footer_Footer","PureComponent","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.9e24941b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const ButtonLink = ({\n  href,\n  id,\n  name,\n  text,\n  activeFilter,\n  setFilter,\n}) => (\n  <a\n    id={id}\n    name={name}\n    href={href}\n    className={cn({ selected: id === activeFilter })}\n    onClick={setFilter}\n  >\n    {text}\n  </a>\n\n);\n\nButtonLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({\n  id,\n  name,\n  className,\n  text,\n  handlerClick,\n}) => (\n  <button\n    id={id}\n    name={name}\n    type=\"button\"\n    className={className}\n    onClick={handlerClick}\n  >\n    {text}\n  </button>\n\n);\n\nButton.defaultProps = {\n  text: '',\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  handlerClick: PropTypes.func.isRequired,\n\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Button } from '../Button';\n\nexport class TodoItem extends Component {\n  state = {\n    inputTitle: this.props.title,\n  }\n\n  handleChangeTitleTodo = ({ target }) => {\n    this.setState({ inputTitle: target.value });\n  }\n\n  onEdit = (id) => {\n    const { setEditingId } = this.props;\n\n    document.addEventListener('keyup', this.handleKeyup)\n\n    setEditingId(id)\n  }\n\n  handleKeyup =(e) => {\n    const { title, setEditingId } = this.props;\n\n    if (e.code === 'Escape') {\n      this.setState({inputTitle: title })\n      setEditingId();\n\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  sendChanges = (e) => {\n    e.preventDefault();\n\n    const { id, setTodoValue } = this.props;\n    const { inputTitle } = this.state;\n\n    if (inputTitle.trim().length > 0) {\n      setTodoValue(id, 'title', inputTitle.trim());\n    }\n  }\n\n  render() {\n    const {\n      title,\n      completed,\n      id,\n      toggleTodoStatus,\n      editingTodoId,\n      deleteTodo,\n    } = this.props;\n\n    const { inputTitle } = this.state;\n\n    return (\n      <li className={cn({\n        completed: completed && editingTodoId !== id,\n        editing: editingTodoId === id,\n      })}\n      >\n        <form onSubmit={this.sendChanges}>\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              checked={completed}\n              onChange={() => toggleTodoStatus(id)}\n            />\n\n            <label\n              htmlFor={`edit-${id}`}\n              onDoubleClick={() => this.onEdit(id)}\n            >\n              {title}\n            </label>\n\n            <Button\n              id={`destroy-${id}`}\n              name={`destroy-${id}`}\n              className=\"destroy\"\n              handlerClick={() => deleteTodo(id)}\n            />\n          </div>\n          {editingTodoId === id && (\n            <input\n              type=\"text\"\n              className=\"edit\"\n              id={`edit-${id}`}\n              value={inputTitle}\n              autoFocus={true}\n              onChange={this.handleChangeTitleTodo}\n              onBlur={this.sendChanges}\n            />\n          )}\n        </form>\n      </li>\n    );\n  }\n}\n\nTodoItem.defaultProps = {};\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = ({\n  todoList,\n  editingTodoId,\n  selectedAll,\n  toggleTodoStatus,\n  toggleTodoAllStatus,\n  deleteTodo,\n  setEditingId,\n  setTodoValue,\n}) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      checked={selectedAll}\n      onChange={toggleTodoAllStatus}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {todoList.map((todo, index) => (\n        <TodoItem\n          {...todo}\n          editingTodoId={editingTodoId}\n          toggleTodoStatus={toggleTodoStatus}\n          deleteTodo={deleteTodo}\n          setEditingId={setEditingId}\n          setTodoValue={setTodoValue}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  editingTodoId: PropTypes.number.isRequired,\n  selectedAll: PropTypes.bool.isRequired,\n  toggleTodoStatus: PropTypes.func.isRequired,\n  toggleTodoAllStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  setEditingId: PropTypes.func.isRequired,\n  setTodoValue: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  }\n\n\n  handleInput =({ target }) => {\n    document.addEventListener('keyup', this.handleKeyup)\n    this.setState({ title: target.value });\n  }\n\n  handleKeyup =(e) => {\n    if (e.code === 'Escape') {\n      this.setState({ title: '' });\n      document.removeEventListener('keyup', this.handleKeyup);\n    }\n  }\n\n  reset = () => {\n    this.setState({ title: '' });\n  }\n\n  sendTodo = (e) => {\n    e.preventDefault();\n\n    const { addNewTodo } = this.props;\n    const { title } = this.state;\n\n    if (title.trim().length > 0) {\n      addNewTodo(title.trim());\n      this.reset();\n    }\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.sendTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.handleInput}\n            onBlur={this.sendTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { ButtonLink, Button } from '../Button';\n\nconst filterButtons = [\n  {\n    id: 'all',\n    href: '#/',\n    text: 'All',\n  },\n  {\n    id: 'active',\n    href: '#/active',\n    text: 'Active',\n  },\n  {\n    id: 'completed',\n    href: '#/completed',\n    text: 'Completed',\n  },\n];\n\nexport const Footer = ({\n  todoList,\n  activeFilter,\n  setFilter,\n  clearComplited,\n}) => (\n  <footer className={cn('footer', { hidden: todoList.length === 0 })}>\n    <span className=\"todo-count\">\n      {`${todoList.filter(todo => !todo.completed).length} items left`}\n    </span>\n\n    <ul className=\"filters\">\n      {filterButtons.map(({ id, href, text }) => (\n        <li key={id}>\n          <ButtonLink\n            href={href}\n            id={id}\n            text={text}\n            name={id}\n            activeFilter={activeFilter}\n            setFilter={setFilter}\n          />\n        </li>\n      ))}\n    </ul>\n\n    <Button\n      id=\"clear-completed\"\n      name=\"clear-completed\"\n      className=\"clear-completed\"\n      text=\"Clear completed\"\n      handlerClick={clearComplited}\n    />\n  </footer>\n);\n\nFooter.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearComplited: PropTypes.func.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\n\nconst todosFromServer = JSON.parse(localStorage.getItem('todos')) || [];\nconst FILTER_TYPES = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n}\n\nclass App extends PureComponent {\n  state = {\n    todoList: [...todosFromServer],\n    editingTodoId: 0,\n    activeFilter: FILTER_TYPES.all,\n    selectedAll: false,\n  }\n\n  componentDidMount() {\n    this.checkSelectedAll();\n  }\n\n  componentDidUpdate() {\n    const { todoList } = this.state;\n\n    localStorage.setItem('todos', JSON.stringify([...todoList]));\n    this.checkSelectedAll();\n  }\n\n  addNewTodo = (title) => {\n    this.setState(state => ({\n      todoList: [\n        ...state.todoList,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n      selectedAll: false,\n    }));\n  }\n\n  toggleTodoStatus = (id) => {\n    this.setState(state => ({\n      todoList: state.todoList.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: !todo.completed,\n          }\n          : todo\n      )),\n      selectedAll: false,\n    }), this.checkSelectedAll());\n\n    this.checkSelectedAll();\n  };\n\n  toggleTodoAllStatus = ({ target }) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => ({\n        ...todo,\n        completed: !state.selectedAll,\n      })),\n      selectedAll: !state.selectedAll,\n    }));\n  }\n\n  checkSelectedAll = () => {\n    const { todoList } = this.state;\n    const activeTodos = todoList.filter(todo => todo.completed).length\n    const isSelectedAll = (todoList.length !== 0) ? activeTodos === todoList.length : false;\n\n    console.log(activeTodos, todoList.length, activeTodos === todoList.length)\n\n    this.setState({ selectedAll: isSelectedAll });\n  }\n\n  setEditingId =(id) => {\n    this.setState(state => ({\n      ...state,\n      editingTodoId: id || 0,\n    }));\n  }\n\n  setTodoValue = (id, field, value) => {\n    this.setState(state => ({\n      ...state,\n      todoList: [...state.todoList].map(todo => (\n        todo.id === id\n          ? {\n            ...todo,\n            [field]: value,\n          }\n          : todo\n      )),\n      editingTodoId: 0,\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(state => ({\n      todoList: [...state.todoList].filter(todo => todo.id !== id),\n    }));\n  }\n\n  setFilter = (e) => {\n    e.preventDefault();\n\n    const { name } = e.target;\n\n    this.setState({ activeFilter: name });\n  }\n\n  getFilteredTodos = () => {\n    const { todoList, activeFilter } = this.state;\n\n    if (activeFilter === FILTER_TYPES.completed) {\n      return todoList.filter(todo => todo.completed);\n    }\n\n    if (activeFilter === FILTER_TYPES.active) {\n      return todoList.filter(todo => !todo.completed);\n    }\n\n    return todoList;\n  }\n\n  clearComplited = () => {\n    this.setState(state => ({\n      todoList: state.todoList.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todoList, editingTodoId, activeFilter, selectedAll } = this.state;\n    const filteredTodoList = this.getFilteredTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header addNewTodo={this.addNewTodo} />\n\n        <TodoList\n          todoList={filteredTodoList}\n          editingTodoId={editingTodoId}\n          selectedAll={selectedAll}\n          toggleTodoStatus={this.toggleTodoStatus}\n          toggleTodoAllStatus={this.toggleTodoAllStatus}\n          deleteTodo={this.deleteTodo}\n          setEditingId={this.setEditingId}\n          setTodoValue={this.setTodoValue}\n        />\n\n        <Footer\n          todoList={todoList}\n          activeFilter={activeFilter}\n          setFilter={this.setFilter}\n          clearComplited={this.clearComplited}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}